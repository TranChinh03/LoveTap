<Window x:Class="LoveTap.EmployeeWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:uc="clr-namespace:LoveTap.UserControlCustom"
        xmlns:local="clr-namespace:LoveTap" 
        xmlns:viewmodel="clr-namespace:LoveTap.ViewModel" 
        d:DataContext="{d:DesignInstance Type=viewmodel:MainViewModel}"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        ResizeMode="NoResize"
        FontFamily="{DynamicResource MaterialDesignFont}"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        Title="EmployeeWindow" Height="550" Width="800">

    <Grid Background="#EEEEFC">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto">
            </RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition ></RowDefinition>
            <RowDefinition ></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
            <ColumnDefinition ></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <!--MENU-->
        <uc:StatusBarUC
                Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="10" x:Name="Employee"/>
        <uc:MenuBarUC Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="11"/>


        <!--ACTION-->
        <!--Add E-->
        <!--<uc:AddEmployee x:Name="AddEmployee"  Grid.Column="1" Grid.ColumnSpan="10" Grid.Row="2" Grid.RowSpan="8" Background="White"
                                 Visibility="Visible" Panel.ZIndex="2" />-->
        
        <!--EditEmployee-->
        <uc:EditEmployeeUC x:Name="EditValue" Grid.Column="1" Grid.ColumnSpan="10" Grid.Row="2" Grid.RowSpan="8" Background="White"
                                 Visibility="Hidden" Panel.ZIndex="2" />

        <!--EmployeeDetail-->
        <uc:EmployeeDetailUC x:Name="DetailOfE" Grid.Column="1" Grid.ColumnSpan="10" Grid.Row="2" Grid.RowSpan="8" Background="White"
                                 Visibility="Hidden" Panel.ZIndex="2"></uc:EmployeeDetailUC>
        <Grid x:Name="BackgroundOpacity" Grid.RowSpan="11" Grid.ColumnSpan="12" Background="{StaticResource Catalina Blue}" 
              Opacity="0.5" Panel.ZIndex="1" Visibility="{Binding Path=Visibility, ElementName=DetailOfE}"></Grid>

        <!--CONTENT-->
        <Grid Grid.Row="2" Background="Transparent" Grid.RowSpan="9"
              Grid.Column="2" Grid.ColumnSpan="10">
            <Grid.RowDefinitions>
                <RowDefinition ></RowDefinition>
                <RowDefinition Height="2.5*" ></RowDefinition>
            </Grid.RowDefinitions>



            <!--1-->
            <Border Grid.Row="0" Grid.ColumnSpan="2"
                    Background="White" 
                    CornerRadius="5" 
                    Margin="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition >
                        </RowDefinition>
                        <RowDefinition ></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid  Grid.Row="0" Margin="10,0,10,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition ></ColumnDefinition>
                            <ColumnDefinition ></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <DockPanel Grid.Column="1" >
                            <Button Background="{StaticResource Linen}"
                                BorderBrush="Transparent" 
                                DockPanel.Dock="Right" Click="DeleteButton_Click"/>
                            <Button Style="{StaticResource MaterialDesignRaisedButton}"
                                Content="+Add Employee" 
                                DockPanel.Dock="Right"
                                Background="{StaticResource Light Sea Green}"
                                Margin="10"
                                Click="Add_Employee_Click"
                            />

                            <Grid DockPanel.Dock="Left">
                            </Grid>
                        </DockPanel>

                        <Image Width="15" 
                           Grid.Column="1"
                           Grid.Row="0"
                           Source="/img/trash.png"
                           Margin="20,0,10,0"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"/>

                        <DockPanel Grid.Column="0" HorizontalAlignment="Left">
                            <TextBlock Margin="10" VerticalAlignment="Center"
                                       FontSize="15" Foreground="{StaticResource Catalina Blue}" FontWeight="Bold"
                                       >Find by:</TextBlock>

                            <ComboBox 
                                     Template="{StaticResource Combobox}"
                                   materialDesign:HintAssist.Hint="Id , Name, ..."
                                  >
                                <ComboBoxItem
                                Content="ID"  />
                                <ComboBoxItem
                                Content="Name" />
                                <ComboBoxItem
                                Content="Phone"  />
                            </ComboBox>
                        </DockPanel>
                    </Grid>

                    <Grid Grid.Row="1" Margin="0,0,0,5"
                              VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition  />
                            <ColumnDefinition  />
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="0" Template="{StaticResource searchBox}"/>

                        <materialDesign:PackIcon Kind="Magnify"  Foreground="{StaticResource Cyan Azure}" Height="16" Width="16" Margin="179,5,0,0" VerticalAlignment="Center"/>

                        <ComboBox   Grid.Column="1" Template="{StaticResource Combobox}"
                                    materialDesign:HintAssist.Hint="Chi nhánh" 
                                  >
                        </ComboBox>

                        <ComboBox  Grid.Column="2" Template="{StaticResource Combobox}"
                                    materialDesign:HintAssist.Hint="Sort by Name" 
                                  >
                        </ComboBox>
                    </Grid>

                    <ComboBox Template="{StaticResource Combobox}"
                              materialDesign:HintAssist.Hint="Khu vực" SelectionChanged="ComboBox_SelectionChanged" 
                              />
                </Grid>

                <Border.Effect>
                    <DropShadowEffect BlurRadius="10" 
                                      Color="Gray"/>
                </Border.Effect>
            </Border>

            <!--2 GridView-->
            <Border Grid.Row="1" Background="White"
                    CornerRadius="5" 
                    Margin="10,35,10,10">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="10" Color="Gray"/>
                </Border.Effect>
                <Grid>
                    <TextBlock VerticalAlignment="Bottom" Margin="10" FontSize="12" Foreground="{StaticResource Cyan Azure}" HorizontalAlignment="Left">Showing 5 of 25 Results</TextBlock>

                    <!--Page-->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <Button Style="{StaticResource tabButton}">
                            <materialDesign:PackIcon Kind="ArrowLeftBold"/>
                        </Button>
                        <Button Style="{StaticResource tabButton}" BorderBrush="Red" >1</Button>
                        <Button Style="{StaticResource tabButton}" BorderBrush="Red" >2</Button>
                        <Button Style="{StaticResource tabButton}" BorderBrush="Red" >3</Button>

                        <Button Style="{StaticResource tabButton}">
                            <materialDesign:PackIcon Kind="ArrowRightBold"/>
                        </Button>
                    </StackPanel>


                </Grid>


            </Border>

            <DataGrid      Grid.Row="1" Margin="10,0,10,48"
                           AutoGenerateColumns="False"
                           CanUserAddRows="False"
                           HeadersVisibility="All"
                           Background="Transparent" HorizontalContentAlignment="Right" VerticalContentAlignment="Stretch">
                <!--<DataGrid.Resources>
                    -->
                <!--<domain:BindingProxy
      x:Key="DataContextProxy"
      Data="{Binding}" xmlns:domain="clr-namespace:MaterialDesignDemo.Domain" />-->
                <!--
                </DataGrid.Resources>-->
                <DataGrid.Columns >

                    <DataGridCheckBoxColumn
                                        Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"
                                        EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                        ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}" >
                        <DataGridCheckBoxColumn.Header >
                            <Border>
                                <CheckBox/>
                                <!--IsChecked="{Binding Data.IsAllItems1Selected, Source={StaticResource DataContextProxy}}" />-->
                            </Border>
                        </DataGridCheckBoxColumn.Header >
                        <DataGridCheckBoxColumn.HeaderStyle>
                            <Style
          TargetType="{x:Type DataGridColumnHeader}"
          BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
                            </Style>
                        </DataGridCheckBoxColumn.HeaderStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridTextColumn 
      Binding="{Binding Code}"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" 
      ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        Width="115"
      Header="Customer ID" Foreground="{StaticResource Cyan Azure}" />
                    <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                    <materialDesign:DataGridTextColumn
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
      ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
      Header="Employee" Width="115">
                        <!--<materialDesign:DataGridTextColumn.Binding>
                                -->
                        <!--<Binding
          Path="Name">
                                    <Binding.ValidationRules>
                                        -->
                        <!--<domain:NotEmptyValidationRule xmlns:domain="clr-namespace:MaterialDesignDemo.Domain" />-->
                        <!--
                                    </Binding.ValidationRules>
                                </Binding>-->
                        <!--
                            </materialDesign:DataGridTextColumn.Binding>-->
                    </materialDesign:DataGridTextColumn>
                    <!-- set a max length to get an indicator in the editor -->
                    <DataGridTextColumn
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
      ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
      Header="Brand" Width="115">
                        <DataGridTextColumn.Binding>
                            <Binding
          Path="Description">
                                <Binding.ValidationRules>
                                    <!--<domain:NotEmptyValidationRule xmlns:domain="clr-namespace:MaterialDesignDemo.Domain" />-->
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <materialDesign:DataGridTextColumn
      Binding="{Binding Numeric}"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
      Header="Position" Width="115">
                        <DataGridTextColumn.HeaderStyle>
                            <Style
          TargetType="{x:Type DataGridColumnHeader}"
          BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter
            Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock
                  Text="{Binding}"
                  TextAlignment="Right"
                  TextWrapping="Wrap" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter
            Property="HorizontalContentAlignment"
            Value="Right" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style
          TargetType="{x:Type TextBlock}"
          BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                <Setter
            Property="HorizontalAlignment"
            Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </materialDesign:DataGridTextColumn>
                    <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                    <materialDesign:DataGridComboBoxColumn
      Header="Phone"
      IsEditable="True"
      ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}"
      SelectedValueBinding="{Binding Food}">
                        <!--Setting the editing element style allows access to all of the combo box's properties
                      <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                          <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                              <Setter Property="IsEditable" Value="True" />
                          </Style>
                      </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
          -->
                    </materialDesign:DataGridComboBoxColumn>
                    <materialDesign:DataGridComboBoxColumn
      Header="Action"
      ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Files}"
      SelectedValueBinding="{Binding Files}" />
                    <DataGridTemplateColumn
      Header="Template Column">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <!--DataType="{x:Type domain:SelectableViewModel}">-->
                                <TextBlock
            FontSize="14"
            FontStyle="Italic"
            Text="{Binding Name}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <!--DataType="{x:Type domain:SelectableViewModel}">-->
                                <TextBox
            Foreground="{DynamicResource SecondaryHueMidBrush}"
            Text="{Binding Name}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

        </Grid>


    </Grid>
</Window>
